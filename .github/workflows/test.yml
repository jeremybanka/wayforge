name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_API: ${{ secrets.TURBO_API }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAMID: ${{ vars.TURBO_TEAMID }}
  NEXT_PUBLIC_REMOTE_ORIGIN: ${{ secrets.NEXT_PUBLIC_REMOTE_ORIGIN }}

defaults:
  run:
    shell: bash

jobs:
  Vitest:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    services:
      postgres:
        image: postgres:17.5-alpine3.20
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 1s --health-timeout 0.5s --health-retries 30
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: ./.github/actions/setup
      - run: pnpm run test
      - uses: actions/upload-artifact@v5
        if: ${{ !cancelled() }}
        with:
          name: Varmint
          path: /tmp/varmint-uploads
          retention-days: 1

  Build:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: ./.github/actions/setup
      - run: pnpm run build

  Coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    services:
      postgres:
        image: postgres:17.5-alpine3.20
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 1s --health-timeout 0.5s --health-retries 30
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: ./.github/actions/setup
      - run: |
          printenv > packages/atom.io/.env
          printenv > packages/treetrunks/.env
        env:
          RECOVERAGE_CLOUD_TOKEN: ${{ secrets.RECOVERAGE_CLOUD_TOKEN }}
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      - run: git rev-parse HEAD > git.sha
      - run: pnpm test:coverage:increased
      # - uses: coverallsapp/github-action@v2.3.6
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

  BreakCheck:
    name: Break Check
    runs-on: ubuntu-latest
    timeout-minutes: 9
    services:
      postgres:
        image: postgres:17.5-alpine3.20
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 1s --health-timeout 0.5s --health-retries 30
    steps:
      - uses: actions/checkout@v5.0.0
      - uses: ./.github/actions/setup
      - run: pnpm test:semver

  # Recoverage:
  #   name: Recoverage
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 9
  #   steps:
  #     - uses: actions/checkout@v4.2.2
  #     - name: Set up Bun
  #       uses: oven-sh/setup-bun@v2.0.1
  #       with:
  #         bun-version-file: .bun-version
  #     - run: bun i
  #     - run: bun --bun pnpm i
  #     - run: bun pnpm run build --filter recoverage
  #     - run: ./packages/recoverage/src/recoverage.x.ts check
