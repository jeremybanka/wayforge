name: Semver

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

defaults:
  run:
    shell: bash

jobs:
  break-check:
    name: Break Check
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:16.2-alpine3.19
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: your_password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 1s --health-timeout 0.5s --health-retries 30


    outputs:
      atom.io: ${{ steps.break-check.outputs.atom.io }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - name: Set up Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20.11.1

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1.2.0
        with:
          bun-version: 1.1.0

      - name: Install Dependencies
        run: bun i

      - name: Break Check
        id: break-check
        run: |
          set +e
          result=$(bun ./packages/break-check/src/break-check.x.ts \
            --tagPattern="atom.io" \
            --testPattern="packages/atom.io/__tests__/public/**/*.test.{ts,tsx}" \
            --testCommand="(cd packages/atom.io && bun run build && bun run test:once:public)" \
            --certifyCommand="grep -q -F '"atom.io": major' .changeset/*.md"
          )
          case $? in
            0)
              # if result includes "breaking-changes-certified"
              if [[ $result == *"breaking-changes-certified"* ]]; then
                echo "atom.io=⚠️ Public tests from the last release broke, and a new major version has been certified." >> $GITHUB_OUTPUT
              else 
                echo "atom.io=✅ No public tests from the last release broke." >> $GITHUB_OUTPUT
              fi
              ;;
            1)
              echo "atom.io=❌ Public tests from the last release are breaking." >> $GITHUB_OUTPUT
              echo "failed=true" >> $GITHUB_OUTPUT
              ;;
            2)
              echo "atom.io=❌ No tests were found matching the `--testPattern` provided." >> $GITHUB_OUTPUT
              echo "failed=true" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Error: The command failed with an unexpected exit code: $exit_code."
              echo "failed=true" >> $GITHUB_OUTPUT
              ;;
          esac
          set -e

      - name: Find Comment
        uses: peter-evans/find-comment@v3.0.0
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: break-check

      - name: Write Comment
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## break-check
            ${{ steps.break-check.outputs['atom.io'] }}
          edit-mode: replace

      - name: Pass/Fail
        if: ${{ steps.break-check.outputs.failed == 'true' }}
        run: |
          echo "Breaking changes were detected. Please fix them before merging."
          exit 1
